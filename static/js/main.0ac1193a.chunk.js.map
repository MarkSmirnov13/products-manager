{"version":3,"sources":["mocks/categories.js","gateways/CategoryApi.js","store/actions/categories.js","mocks/products.js","gateways/ProductApi.js","store/actions/products.js","store/reducers/index.js","store/reducers/categories.js","store/reducers/products.js","components/Main/Main.js","components/Header/Header.js","components/Product/Product.js","components/ProductsList/ProductsList.js","components/Footer/Footer.js","pages/ProductsPage.js","components/NotFound/NotFound.js","components/Form/Form.utils.js","components/Form/Form.js","pages/AddProductPage.js","pages/UpdateProductPage.js","routes.js","index.js"],"names":["categories","id","name","categoryApi","getCategories","RECEIVE_CATEGORIES","fetchCategories","dispatch","type","json","map","category","receiveCategories","products","rating","featured","itemsInStock","receiptDate","brand","expirationDate","createdAt","productApi","getProducts","addProduct","product","push","deleteProduct","index","findIndex","splice","updateProduct","RECEIVE_PRODUCTS","ADD_PRODUCT","DELETE_PRODUCT","UPDATE_PRODUCT","addProductProperties","fetchProducts","receiveProducts","productId","deleteProductProperties","updateProductProperties","combineReducers","state","arguments","length","undefined","action","categoriesActions","Object","toConsumableArray","productsActions","concat","filter","Main","_ref","children","react_default","a","createElement","Header","Fragment","className","Product","useDispatch","moment","format","Card","CardBody","CardTitle","CardText","tag","ListGroup","ListGroupItem","key","react_router_dom","to","Button","color","onClick","deleteProductAction","ProductList","productsGroups","chunk","Container","productsGroup","Row","Col","sm","components_Product_Product","Footer","ProductsPage","this","props","components_Header_Header","ProductsList","components_Footer_Footer","Component","connect","categoriesById","reduce","acc","objectSpread","defineProperty","getCategoriesById","NotFound","defaultProduct","getExpirationDate","date","nowDate","Math","ceil","getTime","getDefaultSelectionValue","productState","forEach","indexOf","withRouter","history","validationDefaultState","isUpdateProduct","productIsValid","Date","formIsValid","getValidationDefaultState","useSelector","_useState","useState","_useState2","slicedToArray","setProductState","_useState3","_useState4","validationState","setValidationState","useEffect","validateForm","keys","every","validate","fieldName","propIsValid","additionalProp","_objectSpread2","isValid","element","document","getElementById","classList","remove","add","addValidationToForm","validateField","fieldValue","nameIsValid","correctRating","Number","ratingIsValid","isInteger","featuredIsValid","categoriesAreValid","expirationDateIsValid","handleInputChange","e","value","target","options","i","selected","checked","es_Form","onSubmit","preventDefault","productProp","floor","random","toISOString","FormGroup","Label","for","Input","placeholder","onChange","FormFeedback","check","defaultValue","multiple","AddProductPage","components_Form_Form","UpdateProductPage","match","params","getRoutes","components_Main_Main","react_router","exact","path","component","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es"],"mappings":"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","file":"static/js/main.0ac1193a.chunk.js","sourcesContent":["const categories = [\n  {\n    id: 1,\n    name: 'TV & Home Cinema'\n  },\n  {\n    id: 2,\n    name: 'Laptops'\n  },\n  {\n    id: 3,\n    name: 'Watches'\n  },\n  {\n    id: 4,\n    name: 'Headphones'\n  },\n  {\n    id: 5,\n    name: 'Phones'\n  },\n  {\n    id: 6,\n    name: 'Desktops'\n  },\n  {\n    id: 7,\n    name: 'Monitors'\n  },\n  {\n    id: 8,\n    name: 'Printers'\n  },\n  {\n    id: 9,\n    name: 'Monitors'\n  },\n  {\n    id: 10,\n    name: 'Camera & Photo'\n  },\n  {\n    id: 11,\n    name: 'Audio & HiFi'\n  }\n];\n\nexport default categories;\n","import categories from '../mocks/categories';\n\nclass CategoryApi {\n  getCategories = () => {\n    return categories;\n  };\n}\n\nexport const categoryApi = new CategoryApi();\n","import { categoryApi } from '../../gateways/CategoryApi';\n\nexport const REQUEST_CATEGORIES = 'REQUEST_CATEGORIES';\nexport const RECEIVE_CATEGORIES = 'RECEIVE_CATEGORIES';\n\nconst requestCategories = () => ({\n  type: REQUEST_CATEGORIES\n});\n\nconst receiveCategories = json => ({\n  type: RECEIVE_CATEGORIES,\n  categories: json.map(category => category)\n});\n\nexport const fetchCategories = () => dispatch => {\n  dispatch(requestCategories());\n  const json = categoryApi.getCategories();\n  dispatch(receiveCategories(json));\n};\n","const products = [\n  {\n    id: 1,\n    name: 'TV',\n    rating: 9,\n    featured: true,\n    itemsInStock: 2,\n    receiptDate: null,\n    brand: 'JVC',\n    categories: [1, 2, 9],\n    expirationDate: null,\n    createdAt: '2019-04-30T16:00:40+03:00'\n  },\n  {\n    id: 2,\n    name: 'iPhone',\n    rating: 2,\n    featured: false,\n    itemsInStock: 0,\n    receiptDate: '2019-06-14',\n    brand: 'Apple',\n    categories: [5, 4, 3],\n    expirationDate: '2019-05-20',\n    createdAt: '2019-05-14T16:00:40+03:00'\n  },\n  {\n    id: 3,\n    name: 'laptop',\n    rating: 5,\n    featured: false,\n    itemsInStock: 10,\n    receiptDate: null,\n    brand: 'HP',\n    categories: [2],\n    expirationDate: null,\n    createdAt: '2019-05-20T16:00:40+03:00'\n  }\n];\n\nexport default products;\n","import products from '../mocks/products';\n\nclass ProductApi {\n  getProducts = () => {\n    return products;\n  };\n\n  addProduct = product => {\n    return products.push(product);\n  };\n\n  deleteProduct = id => {\n    const index = products.findIndex(product => product.id === id);\n    if (index > -1) {\n      products.splice(index, 1);\n    }\n  };\n\n  updateProduct = product => {\n    const { id } = product;\n    const index = products.findIndex(product => product.id === id);\n    if (index > -1) {\n      products[index] = product;\n    }\n  };\n}\n\nexport const productApi = new ProductApi();\n","import { productApi } from '../../gateways/ProductApi';\n\nexport const REQUEST_PRODUCTS = 'REQUEST_PRODUCTS';\nexport const RECEIVE_PRODUCTS = 'RECEIVE_PRODUCTS';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT';\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT';\n\nconst requestProducts = () => ({\n  type: REQUEST_PRODUCTS\n});\n\nconst receiveProducts = json => ({\n  type: RECEIVE_PRODUCTS,\n  products: json.map(product => product)\n});\n\nexport const addProductProperties = product => ({\n  type: ADD_PRODUCT,\n  product\n});\n\nexport const addProduct = product => dispatch => {\n  dispatch(addProductProperties(product));\n  productApi.addProduct(product);\n};\n\nexport const fetchProducts = () => dispatch => {\n  dispatch(requestProducts());\n  const json = productApi.getProducts();\n  dispatch(receiveProducts(json));\n};\n\nexport const deleteProductProperties = id => ({\n  type: DELETE_PRODUCT,\n  productId: id\n});\n\nexport const deleteProduct = id => dispatch => {\n  dispatch(deleteProductProperties(id));\n  productApi.deleteProduct(id);\n};\n\nexport const updateProductProperties = product => ({\n  type: UPDATE_PRODUCT,\n  product\n});\n\nexport const updateProduct = product => dispatch => {\n  dispatch(updateProductProperties(product));\n  productApi.updateProduct(product);\n};\n","import { combineReducers } from 'redux';\nimport { categories } from './categories';\nimport { products } from './products';\n\nexport default combineReducers({\n  categories,\n  products\n});\n","import * as categoriesActions from '../actions/categories';\n\nexport function categories(state = [], action) {\n  switch (action.type) {\n    case categoriesActions.RECEIVE_CATEGORIES:\n      return [...action.categories];\n    default:\n      return state;\n  }\n}\n\nexport function getCategoriesById(state) {\n  return state.categories.reduce((acc, category) => {\n    return {\n      ...acc,\n      [category.id]: category\n    };\n  }, {});\n}\n","import * as productsActions from '../actions/products';\n\nexport function products(state = [], action) {\n  switch (action.type) {\n    case productsActions.RECEIVE_PRODUCTS:\n      return [\n        ...action.products\n      ];\n    case productsActions.ADD_PRODUCT:\n      return [\n        ...state,\n        action.product\n      ];\n    case productsActions.DELETE_PRODUCT:\n      return [\n        ...state.filter(product => product.id !== action.productId)\n      ];\n    case productsActions.UPDATE_PRODUCT: {\n      const { id } = action.product;\n      const index = state.findIndex(product => product.id === id);\n      state[index] = action.product;\n      return [\n        ...state\n      ];\n    }\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Main = ({ children }) => <div>{children}</div>;\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ name }) => (\n  <>\n    <h2 className='h3'>{name}</h2>\n    <hr />\n  </>\n);\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Card, CardText, CardBody, CardTitle, ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport moment from 'moment';\n\nimport { deleteProduct as deleteProductAction } from '../../store/actions/products';\n\nimport './Product.css';\n\nconst shortDateFormat = 'MM/DD/YYYY';\nconst longDateFormat = 'MM/DD/YYYY hh:mm a';\n\nconst Product = ({ product }) => {\n  const dispatch = useDispatch();\n  const receiptDate = product.receiptDate\n    ? moment(product.receiptDate).format(shortDateFormat)\n    : '-';\n  const expirationDate = product.expirationDate\n    ? moment(product.expirationDate).format(shortDateFormat)\n    : '-';\n  const createdAt = product.createdAt ? moment(product.createdAt).format(longDateFormat) : '-';\n\n  const deleteProduct = id => {\n    dispatch(deleteProductAction(id));\n  };\n\n  return (\n    <Card className='Product'>\n      <CardBody>\n        <CardTitle>{product.name}</CardTitle>\n        <CardText tag='div'>\n          <ListGroup>\n            <ListGroupItem>Brand: {product.brand}</ListGroupItem>\n            <ListGroupItem>Rating: {product.rating}</ListGroupItem>\n            <ListGroupItem>Featured: {product.featured ? 'Yes' : 'No'}</ListGroupItem>\n            <ListGroupItem>Items In Stock: {product.itemsInStock}</ListGroupItem>\n            <ListGroupItem>\n              Categories:\n              <ul>\n                {product.categories.map(category => (\n                  <li key={category.id}>{category.name}</li>\n                ))}\n              </ul>\n            </ListGroupItem>\n            <ListGroupItem>Receipt Date: {receiptDate}</ListGroupItem>\n            <ListGroupItem>Expiration Date: {expirationDate}</ListGroupItem>\n            <ListGroupItem>Created At: {createdAt}</ListGroupItem>\n          </ListGroup>\n        </CardText>\n        <Link to={`/update/${product.id}`} className='btn btn-primary'>\n          Update\n        </Link>\n        <Button color='danger' onClick={() => deleteProduct(product.id)}>\n          Delete\n        </Button>\n      </CardBody>\n    </Card>\n  );\n};\n\nProduct.propTypes = {\n  product: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    featured: PropTypes.bool.isRequired,\n    itemsInStock: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string\n    ]),\n    receiptDate: PropTypes.string,\n    brand: PropTypes.string,\n    categories: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n    expirationDate: PropTypes.string\n  }).isRequired\n};\n\nexport default Product;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'reactstrap';\nimport { chunk } from 'lodash';\nimport Product from '../Product/Product';\n\nconst ProductList = ({ products }) => {\n  const productsGroups = chunk(products, 3);\n\n  return (\n    <Container>\n      {productsGroups.map((productsGroup, index) => (\n        <Row key={products[index].id} className='mb-5'>\n          {productsGroup.map(product => (\n            <Col sm='4' key={product.id}>\n              <Product product={product} />\n            </Col>\n          ))}\n        </Row>\n      ))}\n    </Container>\n  );\n};\n\nProductList.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default ProductList;\n","import React from 'react';\n\nimport './Footer.css';\n\nconst Footer = () => (\n  <footer>\n    <p>Products Manager</p>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header/Header';\nimport ProductsList from '../components/ProductsList/ProductsList';\nimport { fetchCategories } from '../store/actions/categories';\nimport { fetchProducts } from '../store/actions/products';\nimport { getCategoriesById } from '../store/reducers/categories';\nimport Footer from '../components/Footer/Footer';\n\nclass ProductsPage extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n\n    dispatch(fetchCategories());\n    dispatch(fetchProducts());\n  }\n\n  render() {\n    const { products } = this.props;\n\n    return (\n      <>\n        <Header name='Products' />\n        <Link to='/add'>Add product</Link>\n        <ProductsList products={products} />\n        <Footer />\n      </>\n    );\n  }\n}\n\nProductsPage.propTypes = {\n  products: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => {\n  const categoriesById = getCategoriesById(state);\n\n  const products = state.products.map(product => {\n    const categories = product.categories.map(id => categoriesById[id]);\n\n    return {\n      ...product,\n      categories\n    };\n  });\n\n  return {\n    products\n  };\n};\n\nexport default connect(mapStateToProps)(ProductsPage);\n","import React from 'react';\n\nconst NotFound = () => <h1>Not Found</h1>;\n\nexport default NotFound;\n","export const ADD_PRODUCT = 'addProduct';\nexport const UPDATE_PRODUCT = 'updateProduct';\n\nexport const defaultProduct = {\n  name: '',\n  rating: '',\n  featured: false,\n  itemsInStock: '',\n  receiptDate: '',\n  brand: '',\n  categories: [],\n  expirationDate: ''\n};\n\nexport const getValidationDefaultState = (isUpdateProduct, expirationDate) => ({\n  productIsValid: {\n    name: isUpdateProduct,\n    rating: isUpdateProduct,\n    featured: true,\n    categories: isUpdateProduct,\n    expirationDate:\n      isUpdateProduct && expirationDate\n        ? getExpirationDate(new Date(expirationDate), new Date()) >= 30\n        : true\n  },\n  formIsValid: false\n});\n\nexport const generateId = () => Math.floor(Math.random() * 100000);\n\nexport const getExpirationDate = (date, nowDate) =>\n  Math.ceil((date.getTime() - nowDate.getTime()) / (1000 * 3600 * 24)) - 1;\n\nexport const checkForm = productIsValid =>\n  Object.keys(productIsValid).every(product => productIsValid[product]);\n\nexport const addValidationToForm = (name, isValid) => {\n  const element = document.getElementById(name);\n\n  if (isValid) {\n    element.classList.remove('is-invalid');\n    element.classList.add('is-valid');\n  } else {\n    element.classList.remove('is-valid');\n    element.classList.add('is-invalid');\n  }\n};\n\nexport const getDefaultSelectionValue = (categories, productState, type) => {\n  const state = [];\n  if (type === UPDATE_PRODUCT) {\n    categories.forEach(category => {\n      if (productState.categories.indexOf(category.id) !== -1) {\n        state.push(category.id)\n      }\n    });\n\n    return state;\n  }\n\n  return state;\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Button, Form as FormBase, FormGroup, Label, Input, FormFeedback } from 'reactstrap';\n\nimport {\n  ADD_PRODUCT,\n  UPDATE_PRODUCT,\n  defaultProduct,\n  generateId,\n  getValidationDefaultState,\n  getExpirationDate,\n  checkForm,\n  addValidationToForm,\n  getDefaultSelectionValue\n} from './Form.utils';\nimport { addProduct, updateProduct } from '../../store/actions/products';\nimport { fetchCategories } from '../../store/actions/categories';\n\nconst Form = ({ type, product, history }) => {\n  const isUpdateProduct = type === UPDATE_PRODUCT;\n  const validationDefaultState = getValidationDefaultState(isUpdateProduct, product && product.expirationDate);\n  const dispatch = useDispatch();\n  const categories = useSelector(state => {\n    if (state.categories.length === 0) {\n      dispatch(fetchCategories());\n    }\n    return state.categories;\n  });\n  const [productState, setProductState] = useState(type === ADD_PRODUCT ? defaultProduct : product);\n  const [validationState, setValidationState] = useState(validationDefaultState);\n\n  useEffect(() => {\n    validateForm();\n  }, [validationState]);\n\n  const validateForm = () => {\n    setValidationState(state => ({ ...state, formIsValid: checkForm(state.productIsValid) }));\n  };\n\n  const validate = (fieldName, propIsValid, additionalProp = {}) => {\n    setValidationState(state => ({\n      ...state,\n      productIsValid: { ...state.productIsValid, [fieldName]: propIsValid, additionalProp }\n    }));\n\n    addValidationToForm(fieldName, propIsValid);\n  };\n\n  const validateField = (fieldName, fieldValue) => {\n    switch (fieldName) {\n      case 'name': {\n        const nameIsValid = fieldValue.length > 0 && fieldValue.length <= 200;\n        validate(fieldName, nameIsValid);\n        break;\n      }\n      case 'rating': {\n        const correctRating = Number(fieldValue);\n        const ratingIsValid =\n          correctRating && correctRating <= 10 && correctRating > 0 && Number.isInteger(correctRating);\n\n        if (correctRating > 8 && !productState.featured) {\n          setProductState(state => ({ ...state, featured: true }));\n        } else if (correctRating <= 8) {\n          const featuredElement = document.getElementById('featured');\n          featuredElement.classList.remove('is-invalid');\n        }\n\n        validate(fieldName, ratingIsValid, { featured: true });\n        break;\n      }\n      case 'featured': {\n        const featuredIsValid = Number(productState.rating) > 8 ? fieldValue : true;\n        validate(fieldName, featuredIsValid);\n        break;\n      }\n      case 'categories': {\n        const categoriesAreValid = fieldValue.length > 0 && fieldValue.length < 5;\n        validate(fieldName, categoriesAreValid);\n        break;\n      }\n      case 'expirationDate': {\n        const date = new Date(fieldValue);\n        const nowDate = new Date();\n        const expirationDateIsValid = fieldValue ? getExpirationDate(date, nowDate) >= 30 : true;\n        validate(fieldName, expirationDateIsValid);\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const handleInputChange = e => {\n    const { target } = e;\n    const { name } = target;\n    let value;\n\n    if (target.options) {\n      const { options } = target;\n      value = [];\n\n      for (let i = 0; i < options.length; i += 1) {\n        if (options[i].selected) {\n          value.push(Number(options[i].value));\n        }\n      }\n    } else {\n      value = target.type === 'checkbox' ? target.checked\n        : target.type === 'number' ? Number(target.value) : target.value;\n    }\n\n    setProductState(state => ({ ...state, [name]: value }));\n    validateField(name, value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!validationState.formIsValid) {\n      Object.keys(productState).forEach(productProp =>\n        validateField(productProp, productState[productProp])\n      );\n\n      if (!validationState.formIsValid) {\n        return;\n      }\n    }\n\n    if (type === ADD_PRODUCT) {\n      dispatch(\n        addProduct({ ...productState, id: generateId(), createdAt: new Date().toISOString() })\n      );\n    } else {\n      dispatch(updateProduct(productState));\n    }\n\n    history.push('/');\n  };\n\n  return (\n    <FormBase onSubmit={handleSubmit}>\n      <FormGroup>\n        <Label for='name'>Name</Label>\n        <Input\n          type='text'\n          name='name'\n          id='name'\n          placeholder='product name'\n          value={productState.name}\n          onChange={handleInputChange}\n        />\n        <FormFeedback>Name is required, length not greater than 200</FormFeedback>\n      </FormGroup>\n      <FormGroup>\n        <Label for='brand'>Brand</Label>\n        <Input\n          type='text'\n          name='brand'\n          id='brand'\n          placeholder='product brand'\n          value={productState.brand}\n          onChange={handleInputChange}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for='rating'>Rating</Label>\n        <Input\n          type='number'\n          name='rating'\n          id='rating'\n          placeholder='product rating'\n          value={productState.rating}\n          onChange={handleInputChange}\n        />\n        <FormFeedback>Rating is required and must be integer and not greater than 10</FormFeedback>\n      </FormGroup>\n      <FormGroup check>\n        <Label for='featured' check>\n          <Input\n            type='checkbox'\n            name='featured'\n            id='featured'\n            checked={productState.featured}\n            onChange={handleInputChange}\n          />\n          Featured\n          <FormFeedback>Product with rating greater than 8 must be “featured”</FormFeedback>\n        </Label>\n      </FormGroup>\n      <FormGroup>\n        <Label for='itemsInStock'>Items In Stock</Label>\n        <Input\n          type='number'\n          name='itemsInStock'\n          id='itemsInStock'\n          placeholder='items in stock'\n          value={productState.itemsInStock}\n          onChange={handleInputChange}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for='categories'>Categories</Label>\n        <Input\n          type='select'\n          id='categories'\n          name='categories'\n          defaultValue={getDefaultSelectionValue(categories, productState, type)}\n          onChange={handleInputChange}\n          multiple\n        >\n          {\n            categories && categories.map(category => (\n              <option key={category.id} value={category.id}>{category.name}</option>\n            ))\n          }\n        </Input>\n        <FormFeedback>Product should have from 1 to 5 categories</FormFeedback>\n      </FormGroup>\n      <FormGroup>\n        <Label for='receiptDate'>Receipt Date</Label>\n        <Input\n          type='date'\n          name='receiptDate'\n          id='receiptDate'\n          placeholder='receipt date'\n          value={productState.receiptDate}\n          onChange={handleInputChange}\n        />\n      </FormGroup>\n      <FormGroup>\n        <Label for='expirationDate'>Expiration Date</Label>\n        <Input\n          type='date'\n          name='expirationDate'\n          id='expirationDate'\n          placeholder='expiration date'\n          value={productState.expirationDate}\n          onChange={handleInputChange}\n        />\n        <FormFeedback>Expiration date should expire not less than 30 days since now</FormFeedback>\n      </FormGroup>\n      <Button type='submit'>{type === ADD_PRODUCT ? 'Add' : 'Save'}</Button>\n    </FormBase>\n  );\n};\n\nForm.propTypes = {\n  type: PropTypes.string.isRequired,\n  product: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    rating: PropTypes.number.isRequired,\n    featured: PropTypes.bool.isRequired,\n    itemsInStock: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.string\n    ]),\n    receiptDate: PropTypes.string,\n    brand: PropTypes.string,\n    categories: PropTypes.arrayOf(PropTypes.number.isRequired).isRequired,\n    expirationDate: PropTypes.string\n  }),\n  history: PropTypes.object.isRequired\n};\n\nexport default withRouter(Form);\n","import React from 'react';\n\nimport Form from '../components/Form/Form';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\n\nconst AddProductPage = () => {\n  return (\n    <>\n      <Header name='Add product' />\n      <Form type='addProduct' />\n      <Footer />\n    </>\n  );\n};\n\nexport default AddProductPage;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Form from '../components/Form/Form';\nimport { fetchProducts } from '../store/actions/products';\nimport Header from '../components/Header/Header';\nimport Footer from '../components/Footer/Footer';\n\nconst UpdateProductPage = ({\n  match: {\n    params: { id }\n  }\n}) => {\n  const dispatch = useDispatch();\n  const productId = Number(id);\n  const product = useSelector(state => {\n    if (state.products.length === 0) {\n      dispatch(fetchProducts());\n    }\n\n    return state.products.filter(product => product.id === productId);\n  });\n\n  return product.length > 0 ? (\n    <>\n      <Header name='Update product' />\n      <Form product={product[0]} type='updateProduct' />\n      <Footer />\n    </>\n  ) : (\n    'Product Not Found'\n  );\n};\n\nexport default UpdateProductPage;\n","import React from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport Main from './components/Main/Main';\nimport ProductsPage from './pages/ProductsPage';\nimport NotFound from './components/NotFound/NotFound';\nimport AddProductPage from './pages/AddProductPage';\nimport UpdateProductPage from './pages/UpdateProductPage';\n\nexport function getRoutes() {\n  return (\n    <HashRouter>\n      <Main>\n        <Switch>\n          <Route exact path='/' component={ProductsPage} />,\n          <Route path='/add' component={AddProductPage} />\n          <Route path='/update/:id' component={UpdateProductPage} />\n          <Route path='*' component={NotFound} />,\n        </Switch>\n      </Main>\n    </HashRouter>\n  );\n}\n\nexport default getRoutes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from './store/reducers';\nimport getRoutes from './routes';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\n\nconst App = () => {\n  return (\n    <div className='content'>\n      <div className='container'>\n        <Provider store={store}>{getRoutes()}</Provider>\n      </div>\n    </div>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}